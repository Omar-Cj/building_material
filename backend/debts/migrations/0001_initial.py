# Generated by Django 5.2.1 on 2025-06-21 07:07

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0002_initial'),
        ('sales', '0004_sale_due_date_sale_payment_status_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Debt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total debt amount', max_digits=14, validators=[django.core.validators.MinValueValidator(0)])),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, help_text='Amount already paid', max_digits=14, validators=[django.core.validators.MinValueValidator(0)])),
                ('interest_rate', models.DecimalField(decimal_places=2, default=0, help_text='Annual interest rate percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateField(help_text='Date when payment is due')),
                ('last_payment_date', models.DateTimeField(blank=True, help_text='Date of last payment received', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('overdue', 'Overdue'), ('partially_paid', 'Partially Paid'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('payment_terms', models.CharField(blank=True, help_text='Special payment terms or conditions', max_length=255, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this debt', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_debts', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(help_text='Customer who owes this debt', on_delete=django.db.models.deletion.PROTECT, related_name='debts', to='customers.customer')),
                ('sale', models.OneToOneField(blank=True, help_text='Associated sale transaction', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debt', to='sales.sale')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_debts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'debt',
                'verbose_name_plural': 'debts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DebtPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('check', 'Check'), ('credit_card', 'Credit Card'), ('zaad', 'Zaad'), ('edahab', 'Edahab'), ('other', 'Other')], default='cash', max_length=20)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time when payment was made')),
                ('reference_number', models.CharField(blank=True, help_text='Bank reference, check number, or transaction ID', max_length=100, null=True)),
                ('receipt_number', models.CharField(blank=True, help_text='Internal receipt number', max_length=50, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='completed', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this payment', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(help_text='Customer making the payment', on_delete=django.db.models.deletion.PROTECT, related_name='debt_payments', to='customers.customer')),
                ('debt', models.ForeignKey(help_text='Debt this payment is for', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='debts.debt')),
                ('received_by', models.ForeignKey(help_text='Staff member who received the payment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_debt_payments', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_debt_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'debt payment',
                'verbose_name_plural': 'debt payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='DebtReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('phone', 'Phone Call'), ('letter', 'Letter')], max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('message', models.TextField(help_text='Reminder message content')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_reminders', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='debt_reminders', to='customers.customer')),
                ('debt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='debts.debt')),
            ],
            options={
                'verbose_name': 'debt reminder',
                'verbose_name_plural': 'debt reminders',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.AddIndex(
            model_name='debt',
            index=models.Index(fields=['customer', 'status'], name='debts_debt_custome_342eab_idx'),
        ),
        migrations.AddIndex(
            model_name='debt',
            index=models.Index(fields=['due_date', 'status'], name='debts_debt_due_dat_0908b7_idx'),
        ),
        migrations.AddIndex(
            model_name='debt',
            index=models.Index(fields=['created_at'], name='debts_debt_created_d9ee38_idx'),
        ),
        migrations.AddIndex(
            model_name='debtpayment',
            index=models.Index(fields=['debt', 'status'], name='debts_debtp_debt_id_20aeb0_idx'),
        ),
        migrations.AddIndex(
            model_name='debtpayment',
            index=models.Index(fields=['customer', 'payment_date'], name='debts_debtp_custome_29fd86_idx'),
        ),
        migrations.AddIndex(
            model_name='debtpayment',
            index=models.Index(fields=['payment_date'], name='debts_debtp_payment_ecb08d_idx'),
        ),
    ]
